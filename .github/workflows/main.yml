name: CI on Push and Pull Request

on: [push, pull_request]

jobs:
  Practice:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v1
    - name: Run a one-line script
      run: echo Hello, world!
    - name: Run a multi-line script
      run: |
        echo Add other actions to build,
        echo test, and deploy your project.
    - name: Show what's in the directory
      run: |
        ls
    - name: Show what all is in the parent directory
      run: |
        cd ..
        ls
    - name: SDK location
      run: |
        echo $ANDROID_HOME
        # ls $ANDROID_HOME/build-tools/
        # ls $ANDROID_HOME/tools/bin
        find ~/Library/Android/sdk/build-tools -name "zipalign"
                
  Android:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v1
    - name: Android
      env:
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEYSTORE: ${{ secrets.KEYSTORE }}
      run: |
        nuget restore Pla.Mobile.sln
        cd Pla.Mobile
        cd Pla.Mobile.Android
        ls
        # debug
        # msbuild Pla.Mobile.Android.csproj /verbosity:normal /t:Rebuild /p:Configuration=Debug
        msbuild /p:Configuration=Release /t:PackageForAndroid  Pla.Mobile.Android.csproj
        # here we have artefact Pla/Pla/Pla.Mobile/Pla.Mobile.Android/bin/Release/com.companyname.pla.mobile.apk
        #let's sign the app
        echo $KEYSTORE | base64 --decode > keystore
        
        jarsigner -verbose -sigalg MD5withRSA -digestalg SHA1 -keystore keystore -storepass $KEYSTORE_PASSWORD -signedjar ~/pla_signed.apk bin/Release/com.companyname.pla.mobile.apk Pla
        
        #$ANDROID_HOME/build-tools/30.0.3/zipalign -f -v 4 pla_signed.apk pla
        #/Users/runner/Library/Android/sdk/build-tools/30.0.1/zipalign -f -v 4 pla_signed.apk pla
        
        ~/Library/Android/sdk/build-tools/30.0.1/zipalign -f -v 4 ~/pla_signed.apk ~/pla.apk
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        #body: |
        #  Changes in this Release
        #  - First Change
        #  - Second Change
        draft: false
        prerelease: false
        args: |
            ~/pla.apk
    
  #iOS:
  #  runs-on: macos-latest
  #  steps:
  #  - uses: actions/checkout@v1
  #  - name: iOS
  #    run: |
  #      nuget restore Pla.Mobile.sln
  #      cd Pla.Mobile
  #      msbuild Pla.Mobile.iOS/Blank.iOS.csproj /verbosity:normal /t:Rebuild /p:Platform=iPhoneSimulator /p:Configuration=Debug
